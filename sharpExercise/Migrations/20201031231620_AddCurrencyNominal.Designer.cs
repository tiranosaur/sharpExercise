// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sharpExercise;

namespace sharpExercise.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20201031231620_AddCurrencyNominal")]
    partial class AddCurrencyNominal
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("sharpExercise.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("nominal")
                        .HasColumnType("int");

                    b.Property<int>("numCode")
                        .HasColumnType("int");

                    b.Property<double>("value")
                        .HasColumnType("double");

                    b.Property<string>("valuteID")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("сharCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("currencies");
                });

            modelBuilder.Entity("sharpExercise.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Username")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "tiran@mail.ru",
                            Username = "Tiran"
                        },
                        new
                        {
                            Id = 2,
                            Email = "tiranosaur@mail.ru",
                            Username = "tiranosaur"
                        },
                        new
                        {
                            Id = 3,
                            Email = "admin@admin.com",
                            Username = "Admin"
                        },
                        new
                        {
                            Id = 4,
                            Email = "user@gmail.com",
                            Username = "user"
                        },
                        new
                        {
                            Id = 5,
                            Email = "roman@mail.ru",
                            Username = "roman"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
